package {{ .FeatureName }}

import (
	"forgefy/{{.AppName}}/models"
	"forgefy/{{.AppName}}/types"
	validation "github.com/go-ozzo/ozzo-validation"
)

type {{ .FeatureName }} struct {
	{{- range .Fields }}
	{{ .Name }} {{ .Type }} `db:"{{ .Name }}" goqu:"omitempty"`
	{{- end }}
	models.Userlog
}

func (m {{ .FeatureName }}) IsDefault() bool {
	return m.ID.Len() < 1
}

func (m {{ .FeatureName }}) CreateValidate() error {
	return validation.ValidateStruct(&m,
		{{- range .Fields }}
		validation.Field(&m.{{ .Name }}, validation.Required),
		{{- end }}
	)
}

func (m {{ .FeatureName }}) UpdateValidate() error {
	return validation.ValidateStruct(&m,
		validation.Field(&m.ID, validation.Required),
	)
}

type {{ .FeatureName }}ListRequestParams = models.ListRequestParams[models.ListFilter]

type {{ .FeatureName }}ListResponse = models.ListResponse[{{ .FeatureName }}Model]
