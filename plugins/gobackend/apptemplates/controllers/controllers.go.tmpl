package controllers

import (
	"github.com/{{ .AppNamePackage }}/container"
	"github.com/{{ .AppNamePackage }}/features/auth"
	"github.com/{{ .AppNamePackage }}/features/user"

{{- $AppNameToPackageName := .AppNamePackage }}
{{- range .Features }}
	"github.com/{{ $AppNameToPackageName }}/features/{{ .FeatureNamePackage }}"
{{- end }}
)

type Controllers struct {
	auth    auth.AuthController
	user    user.UserController
{{- range .Features }}
	{{ .FeatureNameCamelCase }}    {{ .FeatureNamePackage }}.{{ .FeatureNameGo }}Controller
{{- end }}
}

func New(cont container.Container) Controllers {
	return Controllers{
		auth:    auth.NewAuthController(cont),
		user:    user.NewUserController(cont),
{{- range .Features }}
		{{ .FeatureNameCamelCase }}:    {{ .FeatureNamePackage }}.New{{ .FeatureNameGo }}Controller(cont),
{{- end }}
	}
}

func (c Controllers) Auth() auth.AuthController {
	return c.auth
}
func (c Controllers) User() user.UserController {
	return c.user
}

{{- range .Features }}
func (c Controllers) {{ .FeatureNameGo }}() {{ .FeatureNamePackage }}.{{ .FeatureNameGo }}Controller {
	return c.{{ .FeatureNameCamelCase }}
}

{{- end }}