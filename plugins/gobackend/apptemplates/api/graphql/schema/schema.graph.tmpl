scalar Time
scalar Int64
scalar Uint

type ResponseStatus {
	code: Int!
}

input Pagination {
	pageSize: Uint
	page: Uint
}

input OrderBy {
	name: String!
	desc: Boolean
}

input ListFilter {
	search: String
}

type AuthMutation {
	login(email: String!, password: String!): LoginResponse
	register(email: String!, firstName: String!, lastName: String!, password: String!): RegisterResponse
}

{{- range .Features }}

type {{ .GoTypeName }} {
	{{- range .Fields }}
	{{ .SchemaVarName }}: {{ .SchemaType }}!
	{{- end }}
	creationUserID: String!
	updateUserID: String!
	createdAt: Time!
	updatedAt: Time!
}

input Create{{ .GoTypeName }}Input {
	{{- range .Fields }}
	{{ .SchemaVarName }}: {{ .SchemaType }}!
	{{- end }}
}

input Update{{ .GoTypeName }}Input {
	{{- range .Fields }}
	{{ .SchemaVarName }}: {{ .SchemaType }}!
	{{- end }}
}

type {{ .GoTypeName }}ListResponse {
	count: Int64!
	pageSize: Uint!
	page: Uint!
	data: [{{ .GoTypeName }}!]!
}

type {{ .GoTypeName }}Query {
	single(id: String!): {{ .GoTypeName }}
	list(pagination: Pagination, filter: ListFilter, orderBy: [OrderBy!]): {{ .GoTypeName }}ListResponse
	profile: {{ .GoTypeName }}
}

type {{ .GoTypeName }}Mutation {
	create(model: Create{{ .GoTypeName }}Input!): ResponseStatus
	update(id: String!, model: Update{{ .GoTypeName }}Input!): ResponseStatus
	delete(id: String!): ResponseStatus
}

{{- end }}

schema {
	query: Query
	mutation: Mutation
}

type Query {
{{- range .Features }}
	{{ .FeatureNameLowerCamel }}Query: {{ .GoTypeName }}Query!
{{- end }}
}

type Mutation {
	authentication: AuthMutation!
{{- range .Features }}
	{{ .FeatureNameLowerCamel }}Mutation: {{ .GoTypeName }}Mutation!
{{- end }}
}
