{{ $app := . -}}
{{ $feature := . }}

package models

import (
	basemodels "github.com/{{ $app | PackageName }}/models"
	"github.com/{{ $app | PackageName }}/types"
	validation "github.com/go-ozzo/ozzo-validation"
)

type {{ $feature | GoType }}Model struct {
	{{- range $field := .Fields }}
	{{ $field.FieldNameCamelCaseUpper }} {{ $field | GoType }} `db:"{{ $field | DBName }}" goqu:"omitempty"`
	{{- end }}
	basemodels.Userlog
}

func (m {{ $feature | GoType }}Model) IsDefault() bool {
	return m.{{ .IDField.FieldNameCamelCaseUpper }}.Len() < 1
}

func (m {{ $feature | GoType }}Model) CreateValidate() error {
	return validation.ValidateStruct(&m,
		{{- range .Fields }}
		validation.Field(&m.{{ .FieldNameCamelCaseUpper }}, validation.Required),
		{{- end }}
	)
}

func (m {{ $feature | GoType }}Model) UpdateValidate() error {
	return validation.ValidateStruct(&m,
		validation.Field(&m.{{ .IDField.FieldNameCamelCaseUpper }}, validation.Required),
	)
}

type {{ $feature | GoType }}ListRequestParams = basemodels.ListRequestParams[basemodels.ListFilter]

type {{ $feature | GoType }}ListResponse = basemodels.ListResponse[{{ $feature | GoType }}Model]
