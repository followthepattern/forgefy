{{ $app := . -}}

package rest

import (
	"net/http"

	"github.com/{{ $app | PackageName }}/controllers"
	"github.com/{{ $app | PackageName }}/features/auth"
{{- $AppNameToPackageName := $app | PackageName }}
{{- range $feature := .Features }}
	"github.com/{{ $AppNameToPackageName }}/features/{{ $feature | PackageName }}"
{{- end }}
	"github.com/go-chi/chi/v5"
)

func New(ctrls controllers.Controllers) http.Handler {
	r := chi.NewMux()

	auth := auth.NewAuthRest(ctrls.Auth())
	{{ range $feature := .Features }}
	{{ .FeatureNameCamelCase }} := {{ $feature | PackageName }}.New{{ $feature | GoType }}Rest(ctrls.{{ $feature | GoType}}())
	r.Route("/{{ $feature | AsURL }}s", func(r chi.Router) {
		r.Get("/", {{ .FeatureNameCamelCase }}.Get)
		r.Get("/id", {{ .FeatureNameCamelCase }}.GetByID)
		r.Post("/", {{ .FeatureNameCamelCase }}.Create)
		r.Post("/id", {{ .FeatureNameCamelCase }}.Update)
	})
	{{ end }}
	r.Route("/authuser", func(r chi.Router) {
		r.Get("/activate/{userID}", auth.ActivateUser)
	})

	return r
}
