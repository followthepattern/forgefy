{{ $app := .App -}}

services:
  {{ .App.AppNameCamelCase }}_db:
    image: postgres:latest
    restart: unless-stopped
    hostname: {{ .App.AppNameCamelCase }}_db
    container_name: {{ .App.AppNameCamelCase }}_db
    ports:
      - {{ .DbPort }}:5432
    environment:
      POSTGRES_DB: {{ .App.AppNameCamelCase }}
      POSTGRES_USER: {{ .App.AppNameCamelCase }}user
      POSTGRES_PASSWORD: dbpass
    volumes:
      - ./tests/integration/testdata/database.sql:/docker-entrypoint-initdb.d/database.sql
{{ if $app.Monitoring }}
    logging:
      driver: "fluentd"
      options:
        tag: docker.{{ .App.AppNameCamelCase }}_db

    depends_on:
      - fluent-bit
{{- end }}

  {{ .App.AppNameCamelCase }}_cerbos:
    image: ghcr.io/cerbos/cerbos:latest
    restart: unless-stopped
    hostname: {{ .App.AppNameCamelCase }}_cerbos
    container_name: {{ .App.AppNameCamelCase }}_cerbos
    command: ["server", "--config=/policies/.cerbos.yaml"]
    ports:
      - {{ .CerbosPort }}:3592
    volumes:
      - ./policies:/policies:rw
      - shared-volume:/sock
{{ if $app.Monitoring }}
    logging:
      driver: "fluentd"
      options:
        tag: docker.{{ .App.AppNameCamelCase }}_cerbos

    depends_on:
      - fluent-bit
{{- end }}

  {{ .App.AppNameCamelCase }}_app:
    image: golang:1.24.2
    hostname: {{ .App.AppNameCamelCase }}_app
    container_name: {{ .App.AppNameCamelCase }}_app
    command: bash -c "go get ./... && go run ./cmd/{{ .App.AppNameCamelCase }}"
    working_dir: /app

    depends_on:
{{- if $app.Monitoring }}
      - fluent-bit
{{- end }}
      - {{ .App.AppNameCamelCase }}_db
      - {{ .App.AppNameCamelCase }}_cerbos

    ports:
      - {{ .App.AppPort }}:8080

    volumes:
      - ./:/app:rw
      - shared-volume:/sock
{{ if $app.Monitoring }}
    logging:
      driver: "fluentd"
      options:
        tag: docker.{{ .App.AppNameCamelCase }}_backend
{{- end }}

volumes:
  shared-volume: