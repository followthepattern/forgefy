{{ $feature := . -}}

export const getSingle{{ $feature | GraphQLName }} = `
query GetSingle{{ $feature | GraphQLName }}($id: String!) {
	{{ .FeatureNameCamelCase }}s {
		single (id: $id) {
		{{- range $field := .Fields }}
			{{ $field | GraphQLName }}
		{{- end }}
		}
	}
}`

export const get{{ $feature | GraphQLName }}s = `
query Get{{ $feature | GraphQLName }}s(
	$pageSize: Uint
	$page: Uint
	$search: String
	$orderBy: [OrderBy!]
) {
	{{ .FeatureNameCamelCase }}s {
		list(
			pagination: { pageSize: $pageSize, page: $page }
			filter: { search: $search }
			orderBy: $orderBy
		) {
			count
			data {
			{{- range $field := .Fields }}
				{{ $field | GraphQLName }}
			{{- end }}
			}
			page
			pageSize
		}
	}
}`