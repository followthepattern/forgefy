{{- $typeName := .FeatureNameCamelCaseUpper -}}
{{- $varName := .FeatureNameCamelCase -}}

import useSingle from "@/graphql/hooks/useSingle";
import { getSingle{{ $typeName }} as graphQL } from "../graphql/query";
import { SingleQueryResult } from "@/graphql/query";
import { {{ $typeName }}, QueryResponse } from "../model";

export default function useSingle{{ $typeName }}(id: string): SingleQueryResult<{{ $typeName }}> {
    const parseResult = (data?: QueryResponse): {{ $typeName }} | undefined => {
        if (!data?.{{ $varName }}s?.single) {
            return undefined;
        }

        return new {{ $typeName }}(data?.{{ $varName }}s.single);
    }

    return useSingle<{{ $typeName }}>({id, parseResult, graphQL})
}