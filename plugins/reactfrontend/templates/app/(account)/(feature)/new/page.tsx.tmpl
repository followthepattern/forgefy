import { useForm } from "react-hook-form";
import useCreate{{ .FeatureTypeName }} from "../hooks/create{{ .FeatureTypeName }}";
import { useNavigate } from "react-router-dom";
import { RESOURCE_URL } from "../page";
import { useEffect } from "react";
import { {{ .FeatureTypeName }} } from "../model";
import SingleLayout from "../../components/singleView/layout";
import GridFields from "../../components/singleView/gridFields/gridFields";
import Label from "../../components/labels/label";
import Input from "../../components/inputFields/input";
import SecondaryButton from "../../components/buttons/secondaryButton";
import PrimaryButton from "../../components/buttons/primaryButton";

export default function {{ .FeatureTypeName }}New() {
    const [executeMutation, { createLoading, createError, createResult }] = useCreate{{ .FeatureTypeName }}();

    const navigate = useNavigate();

    useEffect(() => {
        if (createResult && createResult > 0) {
            navigate(RESOURCE_URL);
        }

    }, [createResult])

    const { register, getValues } = useForm<{{ .FeatureTypeName }}>();

    const onCreate = () => {
        const values = getValues();

        executeMutation({
        {{- range .Fields }}
            {{ .FieldNameCamelCase }}: values.{{ .FieldNameCamelCase }},
        {{- end }}
        })
    }

    const onCancel = () => {
        navigate(RESOURCE_URL)
    }

    return (
        <SingleLayout>
            <SingleLayout.Title>New {{ .FeatureTypeName }}</SingleLayout.Title>
            <form>
                <GridFields className="py-6">
                {{- range .Fields }}
                    <div className="sm:col-span-2">
                        <Label htmlFor="title">
                            {{ .FieldNameHumanReadable }}
                        </Label>
                        <Input
                            {...register("{{ .FieldNameCamelCase }}")}
                            type="{{ .FieldTypeHTML }}"
                            id="{{ .FieldNameCamelCase }}"
                        />
                    </div>
                {{- end }}
                </GridFields>
                <SingleLayout.Footer className="justify-end">
                    <SecondaryButton onClick={onCancel}>Cancel</SecondaryButton>
                    <PrimaryButton onClick={onCreate}>Create</PrimaryButton>
                </SingleLayout.Footer>
            </form>
        </SingleLayout>
    )
}