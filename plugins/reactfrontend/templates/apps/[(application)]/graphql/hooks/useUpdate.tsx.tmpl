import { gql, useMutation } from "@apollo/client";
import { UpdateMutationResult } from "@/graphql/mutation";

interface UpdateProperties {
    parseResult: (data?: any) => number | undefined
    graphQL: string
}

export default function useUpdate<T>({ parseResult, graphQL }: UpdateProperties): UpdateMutationResult<T, number | undefined> {
    const [executeMutation, { data, loading, error }] = useMutation(gql(graphQL));

    const execute = (id: string, model: any) => {
        executeMutation({
            variables: {
                id: id,
                model: model
            }
        });
    };

    const code = parseResult(data);

    return [execute, { updateResult: code, updateLoading: loading, updateError: error }];
}