import { useNavigate, useParams } from "react-router-dom";
import { ToHumanReadable } from "@/lib/strings";

import SingleLayout from "@/app/(account)/components/singleView/layout";
import DataListView from "@/app/(account)/components/singleView/dataListView/dataListView";
import SecondaryButton from "@/app/(account)/../components/buttons/secondaryButton";
import PrimaryButton from "@/app/(account)/../components/buttons/primaryButton";
import LoadingSingleItem from "@/app/(account)/components/singleView/loadingSingleItem";
import Error from "@/app/(account)/error";
import ItemNotFound from "@/app/(account)/components/singleView/itemNotFound";

import { RESOURCE_URL } from "../../const";
import useSingle{{ .FeatureNameCamelCaseUpper }} from "../../hooks/single{{ .FeatureNameCamelCaseUpper }}";

export default function {{ .FeatureNameCamelCaseUpper }}() {
    const { id = "" } = useParams()
    const navigate = useNavigate();

    const { loading, data, error, itemNotFound } = useSingle{{ .FeatureNameCamelCaseUpper }}(id ?? "");

    if (loading) {
        return <LoadingSingleItem className="py-6" />
    }

    if (error) {
        return <Error error={error} />
    }

    if (itemNotFound) {
        return <ItemNotFound className="py-6" />
    }

    const onCancel = () => {
        navigate(`/${RESOURCE_URL}`);
    }

    const onEdit = () => {
        navigate(`/${RESOURCE_URL}/${id}/edit`);
    }

    return (
        <>
            <SingleLayout.Title>{{ .FeatureNameCamelCaseUpper }}</SingleLayout.Title>
            <DataListView className="mt-6">
            {{- range .Fields | NoneID }}
                <DataListView.Row>
                    <DataListView.Label>
                        {{ .FieldNameHumanReadable }}
                    </DataListView.Label>
                    <DataListView.Field>
                        {ToHumanReadable(data?.{{ .FieldNameCamelCase }})}
                    </DataListView.Field>
                </DataListView.Row>
            {{- end }}
            </DataListView>
            <SingleLayout.Footer>
                <PrimaryButton onClick={onEdit}>
                    Edit
                </PrimaryButton>
                <SecondaryButton onClick={onCancel}>
                    Cancel
                </SecondaryButton>
            </SingleLayout.Footer>
        </>
    )
}