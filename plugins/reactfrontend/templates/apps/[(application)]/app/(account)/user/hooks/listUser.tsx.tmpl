import { getUsers as graphQL } from "../graphql/query";
import { ListResponse, ListQueryResult } from "@/lib/query";
import { User, QueryResponse } from "../model";
import useList from "@/graphql/hooks/useList";

export default function useListUser(): ListQueryResult<ListResponse<User>> {
    const parseResult = (data?: QueryResponse): ListResponse<User> | undefined => {
        if (!data?.users?.list) {
            return undefined;
        }

        var result = new ListResponse<User>();

        result.count = data.users?.list.count;
        result.pageSize = data.users?.list.pageSize;
        result.page = data.users?.list.page;

        var d = new Array<User>();

        data.users.list.data?.forEach(element => {
            d.push(new User(element));
        });

        result.data = d;
        return result;
    }

    return useList<User>({parseResult, graphQL})
}