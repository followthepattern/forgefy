import { SubmitHandler, useForm } from "react-hook-form";
import { useEffect } from "react";
import { useTokenStore } from "@/lib/store";
import { ErrorParser } from "@/lib/errorParser";
import PrimaryButton from "@/app/components/buttons/primaryButton";
import { usePost } from "@/http/usePost";
import { BACKEND_URL } from "@/lib/config";

type FormValues = {
    email: string;
    password: string;
};

type LoginResponse = {
    jwt: string
}

export default function LoginForm() {
    const { register, handleSubmit } = useForm<FormValues>();

    const { post, data, error, loading } = usePost<LoginResponse>();

    const { setToken } = useTokenStore();

    const url = `${BACKEND_URL}/auth/login`

    const onSubmit: SubmitHandler<FormValues> = (formValues) => {
        console.info("values", formValues);
        post(
            url, {
                body: formValues,
            })
    };

    useEffect(() => {
        if (data) {
            console.info(data.jwt);
            setToken(data.jwt);
        }
    }, [data, setToken]);

    const inputLabelClassName = "block text-sm font-medium text-gray-primary"
    const inputFieldClassName = "block w-full py-2 border-0 rounded-md shadow-sm text-gray-primary ring-1 ring-inset ring-gray-stroke-weak placeholder:text-gray-stroke-strong focus:ring-2 focus:ring-inset focus:ring-brand sm:text-sm";

    return (
        <div className="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
            <form className="space-y-6" onSubmit={handleSubmit(onSubmit)}>
                <div>
                    <label htmlFor="email" className={inputLabelClassName}>
                        Email address
                    </label>
                    <div className="mt-2">
                        <input
                            id="email"
                            type="email"
                            autoComplete="email"
                            required
                            className={inputFieldClassName}
                            {...register("email")}
                        />
                    </div>
                </div>

                <div>
                    <div className="flex items-center justify-between">
                        <label htmlFor="password" className={inputLabelClassName}>
                            Password
                        </label>
                    </div>
                    <div className="mt-2">
                        <input
                            id="password"
                            type="password"
                            autoComplete="current-password"
                            required
                            className={inputFieldClassName}
                            {...register("password")}
                        />
                    </div>
                </div>

                <div>
                    <PrimaryButton
                        type="submit"
                        className="w-full"
                        state={loading ? "loading": "active"}
                    >
                        Sign In
                    </PrimaryButton>
                    {error && <p className="mt-2 text-sm font-bold text-error">
                        {ErrorParser(error)}
                    </p>}
                </div>

                <div>

                </div>
            </form>
        </div>

    )
}