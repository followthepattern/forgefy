import { SubmitHandler, useForm } from "react-hook-form";
import { ErrorParser } from "@/lib/errorParser";
import { usePost } from "@/http/usePost";
import { BACKEND_URL } from "@/lib/config";
import { RegisterResponse } from "./model";

type FormValues = {
    email: string;
    password: string;
    confirmPassword: string;
    firstName: string;
    lastName: string
};

interface ContainerProperties {
    children: any
}

function Container(props: ContainerProperties) {
    return (
        <div className="flex flex-col justify-center max-w-xl min-h-full p-2 sm:mx-auto">
            <div className="p-4 bg-white rounded-lg">
                {props.children}
            </div>
        </div>
    )
}

interface TitleProperties {
    children: any
}

function Title(props: TitleProperties) {
    return (
        <div className="sm:mx-auto sm:w-full sm:max-w-sm">
            <h2 className="text-2xl font-bold text-center text-gray-primary md:mt-10">
                {props.children}
            </h2>
        </div>
    )
}

export default function Register() {
    const {
        register,
        formState: { errors },
        handleSubmit
    } = useForm<FormValues>();

    const { post, data, error, loading } = usePost<RegisterResponse>();

    const url = `${BACKEND_URL}/auth/register`;

    const onSubmit: SubmitHandler<FormValues> = (formValues) => {
        post(
            url, {
                body: formValues,
            }
        );
    };

    if (loading) {
        return <p>Loading...</p>
    }

    console.info("data", data)

    if (data?.firstName && data?.lastName) {
        return (
            <Container>
                <Title>
                    Welcome, {data.firstName} {data.lastName}!
                </Title>
                <div className="sm:mx-auto sm:w-full sm:max-w-sm">
                    <h1 className="mt-10 text-xl text-center text-gray-primary">
                        Your account has been created successfully.
                        Check your email for verifying your account.
                    </h1>
                </div>
            </Container>
        )
    }

    const inputLabelClassName = "block text-sm font-medium text-gray-primary"
    const inputFieldClassName = "block w-full py-2 border-0 rounded-md shadow-sm text-gray-primary ring-1 ring-inset ring-gray-stroke-weak placeholder:text-gray-stroke-strong focus:ring-2 focus:ring-inset focus:ring-brand sm:text-sm";

    return (
        <Container>
            <Title>
                Create Your Account!
            </Title>
            <div className="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
                <form className="space-y-6" onSubmit={handleSubmit(onSubmit)}>
                    <div>
                        <label htmlFor="first-name" className={inputLabelClassName}>
                            First Name
                        </label>
                        <div className="mt-2">
                            <input
                                id="first-name"
                                type="text"
                                autoComplete="given-name"
                                required
                                className={inputFieldClassName}
                                {...register("firstName")}
                            />
                        </div>
                    </div>
                    <div>
                        <label htmlFor="last-name" className={inputLabelClassName}>
                            Last Name
                        </label>
                        <div className="mt-2">
                            <input
                                id="last-name"
                                type="text"
                                autoComplete="family-name"
                                required
                                className={inputFieldClassName}
                                {...register("lastName")}
                            />
                        </div>
                    </div>
                    <div>
                        <label htmlFor="email" className={inputLabelClassName}>
                            Email address
                        </label>
                        <div className="mt-2">
                            <input
                                id="email"
                                type="email"
                                autoComplete="email"
                                required
                                className={inputFieldClassName}
                                {...register("email")}
                            />
                        </div>
                    </div>
                    <div>
                        <div className="flex items-center justify-between">
                            <label htmlFor="password" className={inputLabelClassName}>
                                Enter Password
                            </label>
                        </div>
                        <div className="mt-2">
                            <input
                                id="password"
                                type="password"
                                autoComplete="off"
                                required
                                className={inputFieldClassName}
                                {...register("password", { validate: (value, formValues) => value == formValues.confirmPassword })}
                            />
                        </div>
                    </div>
                    <div>
                        <div className="flex items-center justify-between">
                            <label htmlFor="password" className={inputLabelClassName}>
                                Confirm Password
                            </label>
                        </div>
                        <div className="mt-2">
                            <input
                                id="confirm-password"
                                type="password"
                                autoComplete="off"
                                required
                                className={inputFieldClassName}
                                {...register("confirmPassword")}
                            />
                        </div>
                    </div>

                    <div>
                        <button
                            type="submit"
                            className="w-full px-3 py-3 text-sm font-semibold text-white rounded-md shadow-sm bg-brand mx:auto hover:bg-brand-hover focus:bg-brand-active"
                        >
                            Sign Up
                        </button>
                        {error && <p className="mt-2 text-sm font-bold text-error">
                            {ErrorParser(error)}
                        </p>}
                        {errors && <p className="mt-2 text-sm font-bold text-error">
                            {errors.password ? "Passwords do not match" : ""}
                        </p>}
                    </div>
                </form>
            </div>
        </Container>
    )
}
