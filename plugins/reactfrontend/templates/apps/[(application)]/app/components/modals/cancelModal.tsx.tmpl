import React, { MouseEventHandler } from 'react';
import classNames from 'classnames';
import {
  Dialog,
  DialogTrigger,
  Modal,
  ModalOverlay,
} from 'react-aria-components';

import PrimaryButton from '@/app/components/buttons/primaryButton';
import Button from '../buttons/button';
import TertiaryButton from '../buttons/tertiaryButton';

interface CancelModalProperties {
  children?: any;
  className?: string;
  title?: string;
  body?: string;
  primaryButtonText?: string;
  secondaryButtonText?: string;
  dontAsk?: boolean;

  onConfirm?: MouseEventHandler<HTMLButtonElement>;
}

export default function CancelModal(props: CancelModalProperties) {
  let [isOpen, setOpen] = React.useState(false);

  return (
    <DialogTrigger
      isOpen={isOpen}
      onOpenChange={setOpen}
    >
      <Button
        onClick={e => {
          if (props.dontAsk && props.onConfirm) {
            props.onConfirm(e);
            return
          }

          setOpen(true);
        }}
        className={classNames(props.className)}
      >
        {props.children}
      </Button>

      <ModalOverlay
        className={({ isEntering, isExiting }) =>
          classNames("fixed inset-0 z-50 overflow-y-auto bg-black/25 flex min-h-full items-end sm:items-center justify-center p-4 text-center backdrop-blur",
            {
              "animate-in fade-in duration-300 ease-out": isEntering,
              "animate-out fade-out duration-200 ease-in": isExiting,
            })}
      >
        <Modal
          isDismissable={true}
          className={({ isEntering, isExiting }) =>
            classNames("w-full max-w-md overflow-hidden rounded-2xl bg-white p-6 text-left shadow-xl",
              {
                "animate-in zoom-in-95 ease-out duration-300": isEntering,
                "animate-out zoom-out-95 ease-in duration-200": isExiting
              })}
        >
          <Dialog className="outline-none">
            {({ close }) => (
              <>
                <div
                  slot="title"
                  className="my-0 text-xl font-semibold text-gray-supporting"
                >
                  {props.title ?? "Discard Your Work?"}
                </div>
                <p className="mt-3 text-gray-stroke-strong">
                  {props.body ?? "You have unsaved changes. Are you sure you want to cancel creating this item? Any entered data will be lost."}
                </p>
                <div className="flex flex-col-reverse gap-2 mt-6 sm:flex-row sm:flex sm:justify-start">
                  <PrimaryButton
                    onClick={props.onConfirm}
                  >
                    {props.primaryButtonText ?? "Discard Changes"}
                  </PrimaryButton>
                  <TertiaryButton
                    onClick={close}

                  >
                    {props.secondaryButtonText ?? "Keep Editing"}
                  </TertiaryButton>
                </div>
              </>
            )}
          </Dialog>
        </Modal>
      </ModalOverlay>
    </DialogTrigger >
  );
}