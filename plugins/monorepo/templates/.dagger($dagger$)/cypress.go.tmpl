{{- $product := . -}}

package main

import (
	"context"
	"dagger/{{ $product.Name | LowerSnakeCase }}/internal/dagger"
)

type Cypress struct {
	{{ $product.Name | LowerCamelCase }} *{{ $product.Name | UpperCamelCase }}
}

func (m *Cypress) Login(ctx context.Context, root *dagger.Directory) (string, error) {
	{{ range $app := $product.Apps -}}
	{{ $app.AppName | LowerCamelCase }}Dir := root.Directory("apps/{{ $app.AppName | FileName }}")
	{{ $app.AppName | LowerCamelCase }}Service := m.{{ $product.Name | LowerCamelCase }}.{{ $app.AppName | UpperCamelCase }}().Service({{ $app.AppName | LowerCamelCase }}Dir)

	{{ end -}}

	return dag.Container().
		From(CypressImage).
		{{ range $app := $product.Apps -}}
		WithServiceBinding("{{ $app.AppName | LowerSnakeCase }}", {{ $app.AppName | LowerCamelCase }}Service).
		{{ end -}}
		WithMountedDirectory("/src", root.Directory(".dagger/cypress")).
		WithWorkdir("/src").
		WithExec([]string{
			"npm", "install",
		}).
		WithExec([]string{
			"npm", "run", "cypress:run",
		}).
		Stdout(ctx)
}
